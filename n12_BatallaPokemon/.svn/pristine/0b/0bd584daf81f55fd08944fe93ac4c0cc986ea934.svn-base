/**
 * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 * Universidad de los Andes (Bogotá - Colombia)
 * Departamento de Ingeniería de Sistemas y Computación 
 * Licenciado bajo el esquema Academic Free License version 2.1 
 *
 * Proyecto Cupi2 (http://cupi2.uniandes.edu.co)
 * Ejercicio: n12_batallaPokemon
 * Autor: Equipo Cupi2 2016
 * ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 */

package uniandes.cupi2.batallaPokemon.cliente.mundo;

import uniandes.cupi2.batallaPokemon.cliente.interfaz.*;

/**
 * Esta clase implementa lo que se debe hacer en un hilo de ejecución cuando se quiere enviar una jugada.
 */
public class ThreadEnviarJugada extends Thread
{
    // -----------------------------------------------------------------
    // Atributos
    // -----------------------------------------------------------------

    /**
     * Referencia a la batalla.
     */
    private Batalla batalla;

    /**
     * Ventana principal de la aplicación.
     */
    private InterfazCupiPokemon principal;
    
    /**
     * Tipo del pokémon que realiza el ataque.
     */
    private String tipo;

    // -----------------------------------------------------------------
    // Constructores
    // -----------------------------------------------------------------

    /**
     * Construye el nuevo hilo y lo deja listo para enviar la jugada.
     * @param pBatalla Batalla en curso. pBatalla != null.
     * @param pInterfaz Ventana principal de la aplicación. pInterfaz != null.
     * @param pTipo Tipo de pokémon que realiza el ataque. pTipo != null.
    */
    public ThreadEnviarJugada( Batalla pBatalla, InterfazCupiPokemon pInterfaz, String pTipo )
    {
        super( );

        batalla = pBatalla;
        principal = pInterfaz;
        tipo= pTipo;
  
    }

    // -----------------------------------------------------------------
    // Métodos
    // -----------------------------------------------------------------

    /**
     * Inicia la ejecución del hilo que realiza el envío del mensaje y espera la respuesta. <br>
     * Cuando se tiene información sobre el resultado de la jugada entonces se actualiza la interfaz.<br>
     * Si el juego debe terminar entonces muestra quién fue el ganador, termina el encuentro y la conexión al servidor.
     */
    public void run( )
    {
        try
        {
            batalla.enviarJugada( tipo );
            principal.actualizarInterfaz( );

            if( batalla.juegoTerminado( ) )
            {
                batalla.terminarEncuentro( );
                principal.actualizarInterfaz( );
                principal.desactivarBotonesJugar( );
                principal.mostrarGanador( );
            }
            else
            {
                principal.esperarJugada( );
            }

        }
        catch( BatallaPokemonException e )
        {
            e.printStackTrace( );
        }
    }
}

1

00:00:00,000  -->  00:00:02,119
Hey guys, welcome back. So, what we've got

2

00:00:02,129  -->  00:00:05,390
so far is a basic single page that

3

00:00:05,400  -->  00:00:07,280
doesn't actually show our posts, so what we

4

00:00:07,290  -->  00:00:08,540
need to do is we need to make this

5

00:00:08,550  -->  00:00:11,120
dynamic and actually show the requested

6

00:00:11,130  -->  00:00:14,690
post in the page. So what we need to do we

7

00:00:14,700  -->  00:00:17,420
need to import two more classes from

8

00:00:17,430  -->  00:00:19,490
Django shortcuts, so it's going to be

9

00:00:19,500  -->  00:00:23,630
"render to response" and then "get_object_

10

00:00:23,640  -->  00:00:30,140
or_404" So in the post method right here

11

00:00:30,150  -->  00:00:32,720
we actually need to change this, so in

12

00:00:32,730  -->  00:00:34,910
the URLs what we need to do is we need

13

00:00:34,920  -->  00:00:38,180
to add a little bit here of regex so I'm

14

00:00:38,190  -->  00:00:41,450
going to put (.*)

15

00:00:41,460  -->  00:00:45,830
and this is going to put a request in

16

00:00:45,840  -->  00:00:46,549
here.

17

00:00:46,559  -->  00:00:52,850
So, what we're going to do in the views

18

00:00:52,860  -->  00:00:55,729
file is we're going to pass that in right

19

00:00:55,739  -->  00:00:59,299
there "slug" and to see if this is working

20

00:00:59,309  -->  00:01:02,990
we're going to print(slug). So let's go

21

00:01:03,000  -->  00:01:06,500
ahead and save this, and run our program.

22

00:01:06,510  -->  00:01:09,260
I'm going to go ahead and open up my

23

00:01:09,270  -->  00:01:12,109
browser here and go to local host at

24

00:01:12,119  -->  00:01:15,560
port 8000, I'm going to click on a post here, and

25

00:01:15,570  -->  00:01:17,539
look in PyCharm and we do see that it

26

00:01:17,549  -->  00:01:20,240
requests the actual slug. So we're capturing

27

00:01:20,250  -->  00:01:23,030
that into this variable right here. So we

28

00:01:23,040  -->  00:01:25,190
need to actually change all of this at

29

00:01:25,200  -->  00:01:27,170
this point, so I'm going to delete that, we're

30

00:01:27,180  -->  00:01:29,270
actually going to return render_to_

31

00:01:29,280  -->  00:01:33,950
response. Now the first argument is going

32

00:01:33,960  -->  00:01:37,999
to be the title or name of the HTML

33

00:01:38,009  -->  00:01:39,560
template that we want to load, so in this case

34

00:01:39,570  -->  00:01:43,550
it's ('post.html') the second argument is

35

00:01:43,560  -->  00:01:45,410
going to be an object { } so we need to open

36

00:01:45,420  -->  00:01:49,520
it up like that, and we're going to pass

37

00:01:49,530  -->  00:01:52,910
along the individual post in a variable

38

00:01:52,920  -->  00:01:55,670
called 'post': and this is where we're

39

00:01:55,680  -->  00:01:58,969
going to use get_object_or_404 and we're

40

00:01:58,979  -->  00:02:01,310
going to pass it the class that we want

41

00:02:01,320  -->  00:02:04,670
to look in, and the matching parameter

42

00:02:04,680  -->  00:02:08,119
that we want to to grab the post by. So

43

00:02:08,129  -->  00:02:09,229
in this case we're going to be looking

44

00:02:09,239  -->  00:02:10,529
in

45

00:02:10,539  -->  00:02:13,020
the (Post,) class, and we're going to be

46

00:02:13,030  -->  00:02:16,110
looking for slug=slug. So it's

47

00:02:16,120  -->  00:02:17,940
going to match the slug find the post

48

00:02:17,950  -->  00:02:20,910
and return it to the template in this

49

00:02:20,920  -->  00:02:25,380
variable. So go ahead and save this, and

50

00:02:25,390  -->  00:02:27,210
now we need to go create this page. So in

51

00:02:27,220  -->  00:02:29,130
templates here i'm going to create a new

52

00:02:29,140  -->  00:02:34,380
HTML file called post, and I'm going to remove

53

00:02:34,390  -->  00:02:36,690
this, and i'm just going to print out

54

00:02:36,700  -->  00:02:52,160
&lt;h2&gt;{{ post.title }}&lt;/h2&gt; and

55

00:02:52,170  -->  00:02:56,360
then &lt;div&gt; &lt;/div&gt; right here we're going to

56

00:02:56,370  -->  00:03:08,600
print out {{ post.content }}

57

00:03:08,610  -->  00:03:12,440
Save this, refresh the application,

58

00:03:12,450  -->  00:03:13,970
we're going to rerun it, we're going to

59

00:03:13,980  -->  00:03:17,360
refresh this page, and as you can see our

60

00:03:17,370  -->  00:03:20,809
posts now are full and we might actually

61

00:03:20,819  -->  00:03:24,080
want to add a link here at the top that

62

00:03:24,090  -->  00:03:41,570
goes back a page. So...

63

00:03:41,580  -->  00:03:46,250
let's jump down a few lines and it

64

00:03:46,260  -->  00:03:53,000
should refresh, not sure if it's going to, now we

65

00:03:53,010  -->  00:03:55,370
see we have now a working link that's back

66

00:03:55,380  -->  00:03:58,910
to index on every single post page. And

67

00:03:58,920  -->  00:04:00,440
one other thing we're going to do in

68

00:04:00,450  -->  00:04:01,790
this video and this is going to wrap up

69

00:04:01,800  -->  00:04:03,800
the Django section a bit, I mean we've

70

00:04:03,810  -->  00:04:05,570
learned all the basics of Django, if you

71

00:04:05,580  -->  00:04:07,250
guys want to take this further it's a

72

00:04:07,260  -->  00:04:08,960
great package you can make great

73

00:04:08,970  -->  00:04:12,350
websites and it's really easy to use, and

74

00:04:12,360  -->  00:04:13,520
what we're going to do here is we're

75

00:04:13,530  -->  00:04:16,880
going to add one more route.

76

00:04:16,890  -->  00:04:20,150
It's going to be ur(r'^about/$'), and it's going to

77

00:04:20,160  -->  00:04:29,540
be about. That's going to connect to

78

00:04:29,550  -->  00:04:33,140
blog_views.about and we're just gonna make a

79

00:04:33,150  -->  00:04:45,090
static page. def about(request):

80

00:04:45,100  -->  00:04:46,500
So we're just going to use the render

81

00:04:46,510  -->  00:04:49,590
method return render(request, 'about.html',  { }) and

82

00:04:49,600  -->  00:04:51,120
I mean we've done this before this isn't

83

00:04:51,130  -->  00:05:00,450
going to be new, but used to drill this

84

00:05:00,460  -->  00:05:01,920
in there make sure that you guys

85

00:05:01,930  -->  00:05:04,650
understand the different concepts. We've

86

00:05:04,660  -->  00:05:06,720
done this, we've done this specific

87

00:05:06,730  -->  00:05:08,970
thing incidently, but we haven't done it

88

00:05:08,980  -->  00:05:10,320
intentionally and so that's what we're

89

00:05:10,330  -->  00:05:12,300
going to do now. Go ahead and create an

90

00:05:12,310  -->  00:05:17,820
HTML file call it up about.html and this

91

00:05:17,830  -->  00:05:21,000
is just gonna be literally a static page &lt;h1&gt;Static Page&lt;/h1&gt;

92

00:05:21,010  -->  00:05:24,810
You could add all the content you

93

00:05:24,820  -->  00:05:27,570
want to this page, you should refresh, refresh

94

00:05:27,580  -->  00:05:33,000
this, and go to about and you'll see that

95

00:05:33,010  -->  00:05:36,150
we do get a static page. We go back and browse

96

00:05:36,160  -->  00:05:42,090
the site like that.
